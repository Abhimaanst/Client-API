name: Validate & build index

on:
  push:
    branches:
    - master
    paths-ignore:
    - 'mappings/index.json'
  workflow_dispatch:

jobs:
  servers:
    runs-on: ubuntu-latest

    steps:
      # Prepare the working dir
      - name: Clear any existing files
        run: rm -rf *
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      # Install Python
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: pip install -r mappings/scripts/requirements.txt

      # Validate servers
      - name: Validate Servers
        run: |
          cd mappings
          python scripts/validate.py --servers_dir servers --metadata_schema metadata.schema.json --inactive_file inactive.json --inactive_schema inactive.schema.json
        env:
          PR_ID: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USE_ARGS: "true"
      
      # Build index
      - name: Delete the old index
        run: rm -f mappings/index.json
      
      - name: Build Index
        run: |
          cd mappings
          python scripts/create_index.py --servers_dir servers --inactive_file inactive.json --index_output index.json
      
      - name: Commit index
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Updated the servers index
  
  upload:

    needs: servers

    runs-on: ubuntu-latest

    steps:
    # Prepare the working dir
      - name: Clear any existing files
        run: rm -rf *

    # Download & connect to the CloudFlare Tunnel
      - name: Download & setup CloudFlare Tunnel
        run: |
          curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb

          sudo dpkg -i cloudflared.deb

          mkdir -p ~/.ssh

          echo -e "Host ${{ secrets.SSH_URL }}\n\tProxyCommand /usr/local/bin/cloudflared access ssh --hostname ${{ secrets.SSH_URL }} --id ${{ secrets.TUNNEL_ACCESS }} --secret ${{ secrets.TUNNEL_SECRET }}" >> ~/.ssh/config

          sudo apt install sshpass

      # Pull the latest files
      - name: Pull the latest files
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_URL }} "cd upload && git fetch --all && git reset --hard origin/master"
    
    # Clear cache
      - name: Purge CloudFlare Cache
        uses: nathanvaughn/actions-cloudflare-purge@master
        with:
          cf_zone: ${{ secrets.CLOUDFLARE_ZONE }}
          cf_auth: ${{ secrets.CLOUDFLARE_TOKEN }}